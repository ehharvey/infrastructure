resource "aws_secretsmanager_secret" "freeipa" {
  name = "freeipa"
}

# Rotation count
variable "freeipa_rotation_count" {
  default = 1 # Increment this to rotate the freeipa user
}

# Random Admin password
resource "random_password" "freeipa_admin_password" {
  count = var.freeipa_rotation_count

  length  = 25
  special = false
}

# Random directory manager password
resource "random_password" "freeipa_directory_manager_password" {
  count = var.freeipa_rotation_count

  length  = 25
  special = false
}

# Function to derive version stages
locals {
  version_stages = [
    "AWSPENDING",
    "AWSCURRENT",
    "AWSPREVIOUS",
  ]
  active_rotation_count = var.freeipa_rotation_count > 3 ? 3 : var.freeipa_rotation_count
}



# Local file
resource "local_file" "freeipa" {
  # Up to 3 versions of the secret can be stored in secrets manager
  # AWSPENDING: Most recently created is pending
  # AWSCURRENT: Second most recently created is current
  # AWSPREVIOUS: Third most recently created is previous
  count    = local.active_rotation_count
  filename = "freeipa_v${var.freeipa_rotation_count - 1 - count.index}_(${local.version_stages[count.index > 2 ? 2 : count.index]}).json"
  content = jsonencode({
    admin_password             = random_password.freeipa_admin_password[var.freeipa_rotation_count - 1 - count.index].result
    directory_manager_password = random_password.freeipa_directory_manager_password[var.freeipa_rotation_count - 1 - count.index].result
    version_stages             = [local.version_stages[count.index > 2 ? 2 : count.index]]
  })
}

# AWS Secret Versions
resource "aws_secretsmanager_secret_version" "freeipa" {
  # Up to 3 versions of the secret can be stored in secrets manager
  count = local.active_rotation_count

  secret_id = aws_secretsmanager_secret.freeipa.id
  secret_string = jsonencode({
    admin_password             = random_password.freeipa_admin_password[var.freeipa_rotation_count - 1 - count.index].result
    directory_manager_password = random_password.freeipa_directory_manager_password[var.freeipa_rotation_count - 1 - count.index].result
  })

  # Versions
  version_stages = [["AWSPENDING", "AWSCURRENT", "AWSPREVIOUS"][count.index > 2 ? 2 : count.index]]
}
